* TODO.org

** Code cleaning
+ There are various places where my monorepo file location is hard-coded. Instead, I might want to always assume it is located at ~/monorepo and make a module my/monorepo.nix for it.
+ I have a nix flake check now, but it does not check if my packages build successfully. How can I incorporate that?
+ Host names should be completely specified by the directory containing the machine configuration.
+ Modularize my Terraform code.
+ I should keep the machine names short, i.e. to a single word: cloud-server -> cloud, virtual-devbox -> devbox.
+ Make the cloud-server storage impermanent using impermanence and remove the impermanence parameter altogether. All machines should run impermanence.

** Data science
+ Unfortunately, I have not found that poetry2nix is 100% effective. It often happens that I am missing some module or library and I don't know how to add it. My current workflow is to use a Dockerfile, which also works but is not as reproducible.
+ I would like to move over my data-science scratchpad and use poetry2nix for it. Maybe give it a try with a single example like the red-wine data?

** Desktop
+ How well does Geeqie work as a way to find duplicate images?
+ Find a nice Nix wallpaper and use that as the default sddm background. If there is no .wallpapers folder, then fall back on this background as the default and otherwise on any of the wallpapers in that folder.
+ Switch from zsh to fish? It seems like a nicer shell overall with less configuration needed.
+ For my use case, maybe Syncthing is not the best solution. I sometimes end up with sync-conflicts where I do not think there should be. This has me worried that Syncthing might accidentally delete files I do not want to have deleted. Maybe Unison is a better tool for me?
+ B00merang-Project's Windows themes to make it easier for any guests?
+ Use headphones to start and pause videos / music
+ Receive a notification when the battery is low (at 20% and at 10%). That should be easy with Dunst.
+ Set up a nice notification theme for increasing / decreasing brightness and volume
+ Set up rofi-pass
+ Set up a consistent Nix color scheme using nix-colors
+ Save a predefined set of i3 window layouts
+ The Nitrokey app icon should appear in the bottom bar upon startup
+ Change my cursor theme
+ betterscreenlock automatically locks after 10 mins, even when a video is playing
+ Add icons to Polybar
+ Add volume to Polybar
+ Add brightness to Polybar
+ Add music player to Polybar
+ Add Bluetooth to Polybar
+ Add networks to Polybar
+ Add VPN to Polybar
+ Add active window (i3) to Polybar
+ Add temperature to Polybar
+ Add hard disk drive remaining and tmpfs size remaining to Polybar

** Emacs
+ Use Emacs for a while and then start documenting in a README what kind of functionality I tend to use and like. For example, grep across a project, export the results with embark-export, enable wgrep mode and then run a regexp-replace.
+ If I add general key-bindings, my old key-bindings do not seem to work anymore. Why is this happening?
+ I need to learn how org links work. This is useful for transclusions. Which functionality do these org links come with? How do I link to a region?
+ Org-transclusion should come with an overlay, but it is not appearing for me. This could have to do with doom, org-modern? How can I indicate that a region is transcluded? Currently it looks exactly like the rest of the buffer.
+ I have to be careful combining org-remark and org-transclusion. If I transclude a file, this will change the locations of my remarks in my .marginalia.org files. However, upon reopening the file, the transclusion will be closed and the remarks at the wrong position. How do I fix this?
+ Narrowing can be very useful in Emacs. What kind of functionality surrounds narrowing? I know about narrowing and widening.
+ Add yasnippet / abbrev mode. Which one would I prefer and why? There is also the notion of skeletons, I can use e.g. company for suggestions, auto-insert and dabbrev mode. What do all of these do?
+ Move my config to the extraConfig field so I can prepare for separating out Emacs as a subdirectory of monorepo.
+ Add LaTeX configuration to Emacs again so I can start adding notes with equations.
+ Would it make sense to switch from org-roam to denote? org-roam has a lot of features, but I do not need most of them, whereas for example a file renaming feature I do miss.
+ Spelling checkers could be nice to have in Emacs, but currently I am not actively using them. What variables can I set, which commands can I trigger and are there useful third-party packages?
+ Since I discovered docker-tramp, would it make sense to stick to Eglot? I liked it quite a lot and I do not really see a need to download language servers inside of my Docker container as lsp-docker does. I am not sure why you would even want that, or do I misunderstand the lsp-docker package?
+ With docker-tramp, it is important to find out which packages are being used for linting and testing. Do these dev packages live inside the Docker container or on my operating system?
+ It would be great if I manage to get org-transclusion to work. I would also like some sort of annotation package like org-remark or annotate. However, the annoying part is that it couples to my file location. If I change the file location, does it break all the notes?
+ It would be nice if there is a simple function I can use that temporarily makes a buffer full-frame size. Like a full-screen button such that when I press it again, it automatically gives me back my original frame layout.
+ When I am creating my emacs-init, it is best to stick as closely as possible to Lisp configuration. This makes it very easy for me to interactively check code from the Nix file that describes my init file.
+ The terminal version of Emacs has difficult to read colours for magit. I should fix that.
+ Sometimes I need to pull in multiple elisp files of the same repository with use-package. Is this how it is supposed to be done?
+ Set up org-babel for Python so I can start moving over my data-science scratch-pad.
+ It might be good to have multiple font sets I can use with fontaine. Sometimes this font is a bit big. What would be nice and why?
+ We need to extract the monorepo directory as a parameter to parameters.nix. Then we can set the org directory in org/default.nix and carry it through with _modules.args to org-roam, where we use it to set the notes and templates directories as parameters, keeping everything modular. The problem currently is that we cannot set them as an environment variable when using emacsclient, since it seems emacsclient starts before the variables are set.
+ My mode-line seems to be too wide. I don't know why that happened in the first place. It does not seem to happen all the time though.

** Hardware
+ Add my Raspberry Pi to my network.
+ Use Disko instead of scripted partitioning.
+ Start using LUKS Disk Encryption
+ Create my own ISO image. When I run `nix build .#nixosConfigurations.laptop.config.system.build.isoImage`, I run into a `does not provide attribute`-error. Why is that? Shouldn't this work?

** License
+ Add license if I continue developing, but I am not sure which one is legally allowed... If there is any Emacs code in there, it should be GPL?

** Virtual machine
+ Fix the compositor issue I have on virtual-devbox. For some reason if picom is turned on, the screen only updates when the compositor has to update, such as when I full-screen a window. Why?
+ How can I ssh into a NixOS VM while setting it up? Should not be so difficult since sshd is enabled by default.
+ Modularize the hardware from my VM features. Sometimes I want to the same features on a different hardware (aarch64-linux vs. x86_64-linux). I will need to be able to plug in the right hardware easily. Check how mitchellh does this.

** Website
+ Blogs and articles should be different
  - Blogs are more opinion-based and "life lessons"
  - Articles contain more clear-cut information and can often span series
+ Would it make sense to have a cache of websites that people can request when needed?
