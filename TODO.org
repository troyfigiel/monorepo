* TODO.org
** Code cleaning
+ I need to structure my Emacs configuration. A reasonable solution is by doing it in such a way that I can smartly debug any issues. Unfortunately, bughunter does not work for me, because I am on Nix, so I will have to do smart bisections by hand.
+ There are various places where my monorepo file location is hard-coded. Instead, I might want to always assume it is located at ~/monorepo and make a module my/monorepo.nix for it.
+ I have a nix flake check now, but it does not check if my packages build successfully. How can I incorporate that?
+ Host names should be completely specified by the directory containing the machine configuration.
+ Modularize my Terraform code.
+ I should keep the machine names short, i.e. to a single word: cloud-server -> cloud, virtual-devbox -> devbox.
+ Make the cloud-server storage impermanent using impermanence and remove the impermanence parameter altogether. All machines should run impermanence.

** Development
+ eglot works well, but I have not really gotten flymake to work well. I run into some errors such as undefined functions. I will need to fix this before I have a good development experience.
+ Getting into a development container can be slow, because I have to go to the image, set up the volume, start the container, use TRAMP to connect and run ~/bin/bash~ in a shell. This can easily be automated and it makes me wonder if someone already has. Embark also seems like a good choice here.
+ A Docker workflow also fits quite well with eshell. The commands are usually similar or the same, so I do not feel like I get the full benefit from docker.el.
+ How well would it work to create my own function that sets up a container from a Dockerfile and then opens dired in that container? It might require a bit of waiting for the container to spin up. Or did someone else already wrote something like this?
+ If I use a Docker container for development, I would like to separate my buffers. It can get confusing when I have multiple shells and multiple dired buffers with the same contents since I am using volumes.
+ I need a better shell experience. Eshell has tight TRAMP integration which is perfect for a Docker kind of workflow. I will need to set up some eshell configuration.
+ I should start moving over my data-science scratchpad to my reference projects.

** Desktop
+ How well does Geeqie work as a way to find duplicate images?
+ For my use case, maybe Syncthing is not the best solution. I sometimes end up with sync-conflicts where I do not think there should be. This has me worried that Syncthing might accidentally delete files I do not want to have deleted. Maybe Unison is a better tool for me?
+ B00merang-Project's Windows themes to make it easier for any guests?
+ Use headphones to start and pause videos / music
+ Receive a notification when the battery is low (at 20% and at 10%). That should be easy with Dunst.
+ Set up a nice notification theme for increasing / decreasing brightness and volume
+ betterscreenlock automatically locks after 10 mins, even when a video is playing

** Emacs
+ Move my eshell aliases into a version-controlled file. Which aliases are nice to have?
+ Think about a useful eshell workflow. How do I add completion (pcompletion)? The main selling point of eshell is its integration with Emacs including TRAMP.
+ Combining avy with embark is useful when I am typing somewhere and I quickly need to copy a word or so, for example into the minibuffer. Maybe ace-window is also a nice package to throw in the mix?
+ Switch to denote. A good way to start is by first setting up the inbox. This will allow me to get a feeling over a couple of days for how denote works.
+ Use Emacs for a while and then start documenting in a README what kind of functionality I tend to use and like. For example, grep across a project, export the results with embark-export, enable wgrep mode and then run a regexp-replace.
+ Using org-agenda and syncing it with Nextcloud could be an interesting workflow. It should be possible, but I am not sure how much benefit it would bring me at this point in time. In any case, it is worth exploring.
+ If I add general key-bindings, my old key-bindings do not seem to work anymore. Why is this happening?
+ I need to learn how org links work. This is useful for transclusions. Which functionality do these org links come with? How do I link to a region?
+ Org-transclusion should come with an overlay, but it is not appearing for me. This could have to do with doom, org-modern? How can I indicate that a region is transcluded? Currently it looks exactly like the rest of the buffer.
+ I have to be careful combining org-remark and org-transclusion. If I transclude a file, this will change the locations of my remarks in my .marginalia.org files. However, upon reopening the file, the transclusion will be closed and the remarks at the wrong position. How do I fix this? It seems org-remark also has issues when I use narrowing for the exact same reason.
+ Narrowing can be very useful in Emacs. What kind of functionality surrounds narrowing? I know about narrowing and widening.
+ Add yasnippet / abbrev mode. Which one would I prefer and why? There is also the notion of skeletons, I can use e.g. company for suggestions, auto-insert and dabbrev mode. What do all of these do?
+ Move my config to the extraConfig field so I can prepare for separating out Emacs as a subdirectory of monorepo.
+ Add LaTeX configuration to Emacs again so I can start adding notes with equations.
+ Spelling checkers could be nice to have in Emacs, but currently I am not actively using them. What variables can I set, which commands can I trigger and are there useful third-party packages?
+ Since I discovered docker-tramp, would it make sense to stick to Eglot? I liked it quite a lot and I do not really see a need to download language servers inside of my Docker container as lsp-docker does. I am not sure why you would even want that, or do I misunderstand the lsp-docker package?
+ With docker-tramp, it is important to find out which packages are being used for linting and testing. Do these dev packages live inside the Docker container or on my operating system?
+ It would be great if I manage to get org-transclusion to work. I would also like some sort of annotation package like org-remark or annotate. However, the annoying part is that it couples to my file location. If I change the file location, does it break all the notes?
+ It would be nice if there is a simple function I can use that temporarily makes a buffer full-frame size. Like a full-screen button such that when I press it again, it automatically gives me back my original frame layout.
+ When I am creating my emacs-init, it is best to stick as closely as possible to Lisp configuration. This makes it very easy for me to interactively check code from the Nix file that describes my init file.
+ The terminal version of Emacs has difficult to read colours for magit. I should fix that.
+ Sometimes I need to pull in multiple elisp files of the same repository with use-package. Is this how it is supposed to be done?
+ Set up org-babel for Python so I can start moving over my data-science scratch-pad.
+ It might be good to have multiple font sets I can use with fontaine. Sometimes this font is a bit big. What would be nice and why?
+ Can I not set these below directories relatively? That would remove the pain of having to use the absolute monorepo directory.
+ We need to extract the monorepo directory as a parameter to parameters.nix. Then we can set the org directory in org/default.nix and carry it through with _modules.args to org-roam, where we use it to set the notes and templates directories as parameters, keeping everything modular.
+ My mode-line seems to be too wide. I don't know why that happened in the first place. It does not seem to happen all the time though.

** Hardware
+ Add my Raspberry Pi to my network.
+ Use Disko instead of scripted partitioning.
+ Start using LUKS Disk Encryption
+ Create my own ISO image. When I run `nix build .#nixosConfigurations.laptop.config.system.build.isoImage`, I run into a `does not provide attribute`-error. Why is that? Shouldn't this work?

** License
+ Add license if I continue developing, but I am not sure which one is legally allowed... If there is any Emacs code in there, it should be GPL?

** Virtual machine
+ Fix the compositor issue I have on virtual-devbox. For some reason if picom is turned on, the screen only updates when the compositor has to update, such as when I full-screen a window. Why?
+ How can I ssh into a NixOS VM while setting it up? Should not be so difficult since sshd is enabled by default.
+ Modularize the hardware from my VM features. Sometimes I want to the same features on a different hardware (aarch64-linux vs. x86_64-linux). I will need to be able to plug in the right hardware easily. Check how mitchellh does this.

** Website
+ I removed the notes from my website. Would I still want to mention how I use these notes? In general maybe what my workflow is with Emacs, but also with denote?
+ Blogs and articles should be different
  - Blogs are more opinion-based and "life lessons"
  - Articles contain more clear-cut information and can often span series
+ Would it make sense to have a cache of websites that people can request when needed?
