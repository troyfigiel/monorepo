:ctime:    20220313105215
:END:
#+title: Notebooks versus REPLs
#+filetags: :stub:

[[denote:20220313T105014][Notebooks]] are most useful when:
- exploring data and developing an intuition for the data (when you probably want to keep a [[denote:20220309T105534][Cache]] around)
- but also when you need to communicate your results to other people (since it is basically a REPL
  in document form). For example, to show how your (potentially production-grade) API works.

[[denote:20220313T105249][REPLs]] are most useful when:
- developing for production
- you need [[denote:20220307T144637][Reproducibility]] (because notebooks are normally not executed in an isolated
  environment). However, some downsides of notebooks can be mitigated with tools like [[denote:20220313T111355][Jupytext]] and [[denote:20220221T233008][dvc]]

REPLs are better than notebooks when developing for production, but notebooks are better than REPLs
for [[denote:20220316T222147][Exploratory data analysis]].

Notebooks are an interesting intermediate step between tools like [[denote:20220313T110114][SAS]] and developing in
production. Easy to explore, but also easy to take the code and bring it to a real development environment.

Notebooks keep state around, which is useful when you need the caching, because [[denote:20220313T110635][Caching is hard]]. However, in some cases you do not want any hidden state like when developing for production.

https://medium.com/skyline-ai/jupyter-notebook-is-the-cancer-of-ml-engineering-70b98685ee71
https://www.ehfeng.com/repls-vs-notebooks/
