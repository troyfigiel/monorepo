:ctime:    20220323215112
:END:
#+title: Wolfram code
#+filetags: :stub:

The Wolfram code is a naming system that is often used for one-dimensional cellular automata. For
an elementary cellular automata, the rule is as follows:

List all the possible state configurations in descending numerical order, interpreted as a binary
number.

| left neighbour | current cell | right neighbour | outcome |
|----------------+--------------+-----------------+---------|
|              1 |            1 |               1 |       0 |
|              1 |            1 |               0 |       1 |
|              1 |            0 |               1 |       1 |
|              1 |            0 |               0 |       0 |
|              0 |            1 |               1 |       1 |
|              0 |            1 |               0 |       1 |
|              0 |            0 |               1 |       1 |
|              0 |            0 |               0 |       0 |

Now put the outcome together as a binary number and convert it to decimal \( 01101110_2 = 110 \).
This is the Wolfram code for the cellular automaton.

In general, if we have a cellular automaton taking states in a finite set \( S \) and only
depending on the \( n \) nearest neighbours, the automaton can be fully described by a function \(
f: S^{2n+1} \longrightarrow S \). This means there are a total of \( S^{S^{2n+1}} \) such automata.

For example, there are only 256 [[denote:20220323T214432][Elementary cellular automata]]. When used on their own, these rules
usually refer to this class of automata.
