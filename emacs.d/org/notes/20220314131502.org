:PROPERTIES:
:ID:       ad4e0405-de2a-41e8-9acf-53de937acc47
:mtime:    20220422093858
:ctime:    20220314131502
:END:
#+title: Configuration
#+filetags: :stub:

[[id:9a6525a6-f10a-4064-a3a8-b6bfad9c8093][Configuration as code]]
[[id:364c4a7f-6a3f-4d80-92cb-a8ca5b8409bf][Configuration drift]]
[[id:9ac4cd72-3744-4f9f-bac8-89bf94e47a33][Literate programming fits to configuration files]]
[[id:48e5fb53-8b61-48b3-a7b1-16f9d14a8b07][Lisp is a good configuration language]]

Configuration is needed in many different places of your code. On the other hand, you want a single
place to define them as otherwise it is hard to keep track of where it is used.

This leads to a problem: You either have to pass the configuration around everywhere, leading to
low [[id:47e0cf5d-3964-4d3d-a525-626f0310b31f][Cohesion]] when you have to pass the configuration to all kinds of lower-level functions, or you
can pass it around as a global variable leading to high [[id:9029ce16-77a1-4499-90b6-bb9c3b718efe][Coupling]].

Possible solutions:
- Modularize and put settings only where they are needed. However, this makes it hard to find the
  configuration.
- Environment variables: Easy to change, but hard to structure, clutters your [[id:8c74b054-da01-4ba3-913f-448a18cfa570][Environment]], you
  don't know which variable is used where and moreover, from the code you don't even know which variables there are.


https://www.youtube.com/watch?v=tEsPyYnzt8s

- [[id:7c0e6bb0-ba8a-4924-a19b-989be8df16a9][Parse, don't validate]]

Because you can understand [[id:9a6525a6-f10a-4064-a3a8-b6bfad9c8093][Configuration as code]], it makes sense to keep the configuration in a
file of the same language. This means the parameters in your configuration are immediately
type-safe. The downside is that it couples you to a single language and certain tools might need
configuration files in [[id:6957776a-23eb-4e8a-8c56-a227de9e5ffd][YAML]], [[id:77c09da7-ca77-428a-bed3-f6d81f424c7b][JSON]] or [[id:b877ee25-4987-4f1a-9f1f-57af9eca1b39][XML]] for example. In this case though, you can think about
generating your configuration from your code. [[id:bfc119af-993e-4edd-9f3e-a394f07cb2fd][Generate your configuration instead of templating it]].

If you have to be able to change the program from the outside, you will always need a layer in your
code to sanitize the input.
