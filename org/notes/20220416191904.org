:PROPERTIES:
:ID:       b33a3889-88cc-4d62-81d8-c6b33748ad7b
:mtime:    20220416214412
:ctime:    20220416191904
:END:
#+title: @Talk with Arpan 2022-04-16
#+filetags: :inbox:

- Everything is a story
- Mathematics: Create pristine environment, fake objects, but in the real world it is not so clear.
- But what is a story? You need to get to a goal and get there in the shortest time as possible,
  skip over some details. Get there in a coherent way.
- Might have taken a long meandering road, but you would tell it as if you got there from start to
  finish in a straight line.
- Sometimes we are missing the why though if we go in a straight line. Same in software
  engineering and mathematics. Summary of results, summary of algorithms, but why should I care
  about it?
- It is so much easier to prepare for the talk if you know what the audience is. You need to adjust
  the "why" to your audience, it is not necessarily about the level.
- Maybe having a course on how to speak or how to communicate? Especially in mathematics for example.
- Presenting needs to be done on a regular basis
- Thesis by Tai-Danae Bradley sounds very interesting. Related to [[id:5742c01a-b095-4361-9527-1ebd4e55a2ed][Statistics]], [[id:9a56000d-da8c-4cba-82cc-6038fe352323][Quantum mechanics]],
  applications to [[id:963f964f-1559-411d-9bcc-886d0e6247f3][Machine learning]] and [[id:9f1f82e4-818e-4571-989b-4a8f2a92a8e3][Data science]]. And some applications to [[id:8228ecba-de90-413c-847a-6c764bb3b17e][Category theory]].
  - What is the probability that "orange" and "fruit" go together?
  - Can "orange" and "fruit" go together? (concept analysis)
- When you are writing papers, you want to have the arguments there, but it can distract from the
  reading experience. You want "collapsible sections" for example to do this. It is like have
  several notes on the table side by side instead of having to switch from link to link like in a
  Wikipedia, which has a bit high-barrier.
- Two cultures of mathematics: https://www.dpmms.cam.ac.uk/~wtg10/2cultures.pdf
- If you have an abstract principle or idea, you can generate the concrete details on demand
- In a lot of different regions (companies, mathematics papers, software) you have a separation of
  abstraction layers. This is why micromanaging doesn't work, breaking layers of abstraction.
  People understand their own personal context better.
- Also in military: Auftragstaktik.
- You want to minimize the distance the information needs to travel and you don't want to send too
  much information to a single point (top or root of the tree for example).
- Trust your employees, they know from their own personal context what they need to do.
  Micromanaging goes against this approach. This is the same with software: Functions should not
  call through many layers of abstraction, only the abstraction level below.
- This idea is like an operad? Operad sounds like a way to combine operations together.
- This is important in programming and software. First computer was Babbage difference engine.
- GÃ¶del: Imagine an algorithm, there is an algorithm to enumerate all true statements. But there
  are also true statements that cannot be proved. There are things that you can't answer: For
  example, program that proves that a program terminates or not does not exist.
- You need to trust your collaborators, you should be able to be vulnerable to make progress in
  thinking. Sometimes you need to ask a "dumb question" and then everything falls in place.
- Foundational questions should be asked after a little while. You need to know the question first
  before you can understand the context.
- Suspension of disbelief: You need to sometimes not immediately go into details, but go with the
  flow for a bit before you can really get to the point and understand the context. Follow what the
  person is saying for a bit and ask a question when the story is finished.
- But having interaction is good. You need to know whether your audience is following your talk.
- You need a safe space to analyze data. Sometimes exploratory data is not enough. You need to tell
  a story, you need a different abstraction layer. Don't stop at the huge amount of data and
  analyses you collect, put an abstraction on this and a principle from which you can "derive" the
  results and ask the right questions again.
