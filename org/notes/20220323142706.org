:PROPERTIES:
:ID:       5a9c8ed3-dadc-4c28-8481-c64115bd07cd
:mtime:    20220323154045
:ctime:    20220323142706
:END:
#+title: Catalan number
#+filetags: :stub:

Catalan numbers appear in a variety of counting problems. Often these problems can be translated
into the question of how many [[id:3935b19b-f2c1-4524-9e48-727eaf93aecf][Bernoulli random walks]] exist that start out positive and remain
non-negative until a certain point in time at which the random walk is back at the origin.

Let us define \( C_n \) to be the number of such Bernoulli random walks that start at the origin
and are back at the origin at \( t = 2n \) without having crossed the origin in between.

The key in recovering the recurrence relation, is recognizing that we can split the random walk into
two distinct regions: The steps before the path touches the origin for the first time since the
start of the walk and the remaining path.

If the walk starts and touches the origin again at time \( t = 2k \), it means that in between
times \( t = 0 \) and \( t = 2k \), the path was always at least one step away from the origin.
Furthermore, at \( t = 1 \) and at \( t = 2k-1 \) the path was exactly one step away from the
origin. The number of such paths is precisely \( C_{k-1} \). The number of allowed paths from \( t
= 2k \) to \( t = 2n \) is precisely \( C_{n-k} \) and accounting for this number, we find exactly
\( C_{k-1} C_{n-k} \) walks that first touch the origin at \( t = 2k \).

The recurrence relation now follows simply by noting that any path can be uniquely classified by
its time of first reaching the origin and summing over this total number:

\[
C_n = \sum\limits_{k=1}^n C_{k-1} C_{n-k}
\]

We may rewrite this slightly and note that \( C_0 = 1 \), to find

\[
C_0 = 1 \quad \text{and} \quad C_{n+1} = \sum\limits_{i=0}^n C_i C_{n-i} \quad \text{for } n \geq 0
\]

From this recurrence relation, we define the generating function \( c(x) =
\sum\limits_{n=0}^{\infty} C_n x^n \) and recognize that the term \( \sum\limits_{i=0}^n C_i
C_{n-i} \) is nothing but a [[id:ddb31305-d703-45c7-8e5e-df361c9df07b][Convolution of generating functions]] so that

\begin{equation*}
\begin{align}
\sum\limits_{n=0}^{\infty} C_{n+1} x^n &= \frac{c(x) - 1}{x} \\
\sum\limits_{n=0}^{\infty} \sum\limits_{i=0}^n C_i C_{n-i} x^n &= c(x)^2
\end{align}
\end{equation*}

This leads to the equation

\[
c(x) = 1 + x c(x)^2
\]

This means

\[
c(x) = \frac{1 - \sqrt{1 - 4x}}{2x}
\]

The other solutions to the quadratic equation does not satisfy the initial condition \( C_0 = 1 \).

Using [[id:e73b8088-2865-49fd-97fc-efb768bf2fbf][Newton's generalized binomial theorem]] we expand

\[
\sqrt{1 - 4x} = \sum\limits_{n=0}^{\infty} \binom{\frac{1}{2}}{n} (-4x)^n =
1 - \sum\limits_{n=1}^{\infty} \frac{1}{2n-1} \binom{2n}{n} x^n
\]

# TODO: Skipped a couple of steps here.
Plugging this back into the expression for \( c(x) \), we can equate \( C_n = \frac{1}{n+1}
\binom{2n}{n} \).
