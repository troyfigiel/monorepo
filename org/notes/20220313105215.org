:PROPERTIES:
:ID:       fc76e1b3-cd29-4ec1-9239-f14b069affb3
:mtime:    20220316222207
:ctime:    20220313105215
:END:
#+title: Notebooks versus REPLs
#+filetags: :stub:

[[id:0464d0fe-37fe-43dc-bc13-5a109934d1cb][Notebooks]] are most useful when:
- exploring data and developing an intuition for the data (when you probably want to keep a [[id:57f71017-4de8-40b5-bb94-0edd0ac3c0ca][Cache]] around)
- but also when you need to communicate your results to other people (since it is basically a REPL
  in document form). For example, to show how your (potentially production-grade) API works.

[[id:08af474d-5ab2-47aa-837c-4c7c58033b23][REPLs]] are most useful when:
- developing for production
- you need [[id:4536cafc-57c4-455c-ad8b-adf0041796b7][Reproducibility]] (because notebooks are normally not executed in an isolated
  environment). However, some downsides of notebooks can be mitigated with tools like [[id:6b10742a-eb01-491c-871b-26265c002f93][Jupytext]] and [[id:ee069ad2-bcf1-4dec-bce4-295bc81e74c7][dvc]]

REPLs are better than notebooks when developing for production, but notebooks are better than REPLs
for [[id:54c23a92-d7f6-46e0-996e-0d1fd7affc21][Exploratory data analysis]].

Notebooks are an interesting intermediate step between tools like [[id:28e31e7e-6c8e-4860-bf47-fb920d650820][SAS]] and developing in
production. Easy to explore, but also easy to take the code and bring it to a real development environment.

Notebooks keep state around, which is useful when you need the caching, because [[id:6f2ba5e1-f418-4be9-a41e-a08eaa5cd2c7][Caching is hard]]. However, in some cases you do not want any hidden state like when developing for production.

https://medium.com/skyline-ai/jupyter-notebook-is-the-cancer-of-ml-engineering-70b98685ee71
https://www.ehfeng.com/repls-vs-notebooks/
