:PROPERTIES:
:ID:       4f7b1912-9b81-4bef-b860-d8be585fd23b
:mtime:    20220419094352
:ctime:    20220221233452
:END:
#+title: Literate programming
#+filetags: :stub:

Literate programming is a programming paradigm where the code of a program is intertwined with
natural language.

# TODO: Fix this! Jupyter is not literate programming. The stress is on the report, not on the
# code. This is not the intent of literate programming.
Due to its explanative power, [[id:faebde6d-7a78-4cb4-9601-5b96fe8bb6f2][Literate programming fits to scientific computation]].

# TODO: Does it really? Sometimes config is pretty straightforward.
Due to the lack of coherency in configurations, [[id:9ac4cd72-3744-4f9f-bac8-89bf94e47a33][Literate programming also fits to configuration
files]].

Literate programming is very useful if intent cannot be clearly read from the code and comments are
insufficient to explain what is happening. This is especially the case when [[id:02aeb462-78d1-4f82-ba6a-ea0c5c51e4a9][LaTeX]] is needed or some
form of [[id:5aa3405a-5785-424a-ae15-f7d0ec5124ea][Visualization]].

Literate programming captures the "why" behind a piece of code. You do not want to communicate to
the machine, the main purpose is to communicate to other humans that will read your code. This is
not a technique, this is a mindset change.

# TODO: When should you use literate programming over clean code practices?
[[id:5ff43e35-103c-49a9-a7d7-d0b5dfd56250][Clean code]]

https://www.youtube.com/watch?v=Av0PQDVTP4A

# TODO: Create a modular programming node
- Is not very modular. It is hard to extract parts of the system for reuse. This makes programming like an art, not an engineering problem.
